<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Oswald:wght@200;300;400;500&display=swap');
        
        *{
            font-family: 'Oswald', sans-serif;
        }

        .number input::-webkit-outer-spin-button,
        .number input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        form{
            max-width: 550px;
            margin: 0 auto;
        }

        /* Firefox */
        input[type=number].number {
        -moz-appearance: textfield;
        }
        label{
            display: block;
            text-align: center;
            margin-bottom: 10px;
        }
        .number{
            width: calc(16.66% - 2px);
            float: left;
            padding: 5px;
            box-sizing: border-box;
        }
        .number input{
            width: 100%;
            height: 70px;
            font-size: 4em;
            text-align: center;
            margin: 0;
            padding: 0;
            border: 1px solid #2c3e50;
            border-radius: 5px;
        }
        .button-area{
            padding: 5px;
        }
        button{
            cursor: pointer;
            color: #fff;
            background-color: #2c3e50;
            padding: 10px;
            width: 100%;
            border-radius: 10px;
            border: none;
            margin-top: 2em;
        }

        #message{
            color: #e74c3c;
            text-align: center;
            float: left;
            margin-top: 1.2em;
            width: 100%;
        }
    </style>
</head>
<body>
    <form>
        <div>
            <label>PIN</label>
            <div class="number">
                <input type="number" name="0" id="number_0" class="inputNumber">
            </div>
            <div class="number">
                <input type="number" name="1" id="number_1" class="inputNumber">
            </div>
            <div class="number">
                <input type="number" name="2" id="number_2" class="inputNumber">
            </div>
            <div class="number">
                <input type="number" name="3" id="number_3" class="inputNumber">
            </div>
            <div class="number">
                <input type="number" name="4" id="number_4" class="inputNumber">
            </div>
            <div class="number">
                <input type="number" name="5" id="number_5" class="inputNumber">
            </div>
        </div>
        <div id="message" style="display: none;">Digite o código PIN de 6 dígitos.</div>
        <div class="button-area">
            <button type="button" onclick="submitToken()">
                <i style="display: none;" class="fas fa-spinner fa-spin" id="loading"></i>
                <i style="display: none;"  class="fa-regular fa-circle-check" id="check"></i>
                <i style="display: none;"  class="fa-solid fa-circle-exclamation" id="error"></i>
                <span id="btn-text">VERIFICAR</span>
            </button>
        </div>
    </form>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script>
        const numbers = document.querySelectorAll('.inputNumber');
        const values = [null, null, null, null, null, null];
        const loading = document.querySelector('#loading');
        const check = document.querySelector('#check');
        const error = document.querySelector('#error');
        const btnText = document.querySelector('#btn-text');
        const button = document.querySelector('button');
        const message = document.querySelector('#message');
        const url = window.location.origin;
        const urlPin = window.location.search.split("?pin=")[1];

        const loadPin = () => {
            if(urlPin !== undefined){
                for(i = 0; i < 6; i++){
                    document.querySelector(`#number_${i}`).value = urlPin[i];
                    values[i] = urlPin[i]
                    console.log(values)
                }
            }
        }

        loadPin();


    numbers.forEach( element => {
        element.addEventListener ('keyup', event => {
            let name = parseInt(event.currentTarget.name);
            let inputValue = parseInt(event.currentTarget.value);
            let element = null;

            
            if(inputValue >= 0 && inputValue <= 9 || isNaN(inputValue)){
                values[name] = inputValue;
            }
            event.currentTarget.value = values[name]          

            if(event.currentTarget.value === ""){
                element = document.querySelector(`#number_${name - 1}`);
            }else {
                element = document.querySelector(`#number_${name + 1}`);
            }

            if(element){
                element.focus();
            }
            
        } )
    })

    const submitToken = async () => {
        const localPin = values.join('');
        
        if(localPin.length < 6){
            message.style.display = 'block';
        } else {
            message.style.display = 'none';
            loading.style.removeProperty('display');
            btnText.innerText = "Enviando..."
            button.disabled = true;
            button.style.backgroundColor = '#667788'
            error.style.display = 'none';
            check.style.display = 'none';

            try{
                const result = await checkPin(localPin);
                if(result.status === 200){
                    btnText.innerText = 'E-mail validado com sucesso.';
                    loading.style.display = 'none';
                    button.style.backgroundColor = '#277e49';
                    button.disabled = true;
                    check.style.removeProperty('display');

                    numbers.forEach(e => {
                        e.value='';
                    })
                }
            }catch(err) {                
                loading.style.display = 'none';
                error.style.removeProperty('display');
                btnText.innerText = 'Erro ao validar PIN!';
                button.style.backgroundColor = '#e74c3c';
                button.disabled = false;
                 message.style.display = 'block';
                message.innerText = err.response.data.message;           
            }
        }
    }

    const checkPin = async (pin) => {
        try{
            const result = await axios({
                method: 'POST',
                url: `${url}/auth//confirm-email`,
                data:{
                    pin
                }
            })
            return result
        }catch(err) {
            throw err
        }
    }
    </script>
</body>
</html>